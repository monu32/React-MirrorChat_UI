{"version":3,"sources":["assets/chatImage.png","Components/Header/Header.js","Components/Chat/Chat.js","Container/Layout.js","App.js","index.js"],"names":["module","exports","Header","src","chatImage","alt","Home","state","messages","getUserData","a","localStorage","getItem","JSON","parse","setState","map","message","addMessageToContainer","senderMessageEle","document","createElement","innerText","className","lastReceiverMessage","getElementsByClassName","length","style","marginTop","offsetHeight","getElementById","appendChild","receiverMessageEle","msgContainer","scrollTop","scrollHeight","sendMessage","event","key","target","value","push","setItem","stringify","this","id","type","onKeyDown","placeholder","Component","App","Layout","app","ReactDOM","render"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,uC,+QCgB5BC,EAZA,WAEX,OACI,gCACI,8BACI,yBAAKC,IAAKC,IAAWC,IAAI,cACzB,oDC2EDC,G,kNA/EXC,MACA,CACIC,SAAW,I,EAOfC,Y,sBAAc,4BAAAC,EAAA,2DACNF,EAAWG,aAAaC,QAAQ,aAD1B,uBAGNJ,EAAWK,KAAKC,MAAMN,GAHhB,SAIA,EAAKO,SAAS,CAACP,aAJf,OAKNA,EAASQ,KAAI,SAAAC,GAAO,OAAI,EAAKC,sBAAsBD,MAL7C,2C,EASdC,sBAAwB,SAACD,GACrBA,EAAUA,EACV,IAAIE,EAAmBC,SAASC,cAAc,OAC9CF,EAAiBG,UAAYL,EAC7BE,EAAiBI,UAAY,SAE7B,IAAMC,EAAsBJ,SAASK,uBAAuB,YACzDD,EAAoBE,OAAS,EAC5BP,EAAiBQ,MAAMC,UAAY,GAAGJ,EAAoBA,EAAoBE,OAAO,GAAGG,aAAa,KAGrGV,EAAiBQ,MAAMC,UAAY,OAIdR,SAASU,eAAe,mBAC9BC,YAAYZ,GAE/B,IAAIa,EAAqBZ,SAASC,cAAc,OAChDW,EAAmBV,UAAYL,EAC/Be,EAAmBT,UAAY,WAC/BS,EAAmBL,MAAMC,UAAY,GAAGT,EAAiBU,aAAa,KAE1CT,SAASU,eAAe,qBAC/BC,YAAYC,GAEjC,IAAMC,EAAeb,SAASU,eAAe,gBAC7CG,EAAaC,UAAYD,EAAaE,c,EAG1CC,Y,uCAAc,WAAOC,GAAP,iBAAA3B,EAAA,yDACO,UAAd2B,EAAMC,IADC,oBAGO,MADPrB,EAAUoB,EAAME,OAAOC,OAFvB,wBAIFH,EAAME,OAAOC,MAAQ,IACjBhC,EALF,YAKkB,EAAKD,MAAMC,WACtBiC,KAAKxB,GANZ,SAOI,EAAKF,SAAS,CAACP,SAASA,IAP5B,OAQFG,aAAa+B,QAAQ,WAAW7B,KAAK8B,UAAUnC,IAC/C,EAAKU,sBAAsBD,GATzB,4C,wHA1CV2B,KAAKnC,gB,+BAyDL,OACI,yBAAKc,UAAU,cACX,kBAAC,EAAD,MACA,yBAAKsB,GAAG,gBACJ,yBAAKA,GAAG,sBACR,yBAAKA,GAAG,qBAEZ,6BAAStB,UAAU,YACf,2BAAOuB,KAAK,OAAOC,UAAWH,KAAKR,YAAaY,YAAY,iC,GAzE7DC,cCQJC,EATL,WAEN,OACE,6BACI,kBAAC,EAAD,QCKKA,EATL,WAEN,OACE,6BACE,kBAACC,EAAD,Q,QCDFC,EAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,OAINC,IAASC,OAAOF,EAAIhC,SAASU,eAAe,W","file":"static/js/main.74a490c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatImage.f6d01093.png\";","import React from 'react';\r\nimport './Header.css'\r\nimport chatImage from '../../assets/chatImage.png'\r\n\r\nconst Header = () =>{\r\n    \r\n    return (\r\n        <header>\r\n            <span>\r\n                <img src={chatImage} alt='Not found' />\r\n                <label>Mirror Chatbot</label>\r\n            </span>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Header from '../Header/Header';\r\nimport './Chat.css'\r\n\r\nclass Home extends Component\r\n{\r\n    state = \r\n    {\r\n        messages : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUserData();\r\n    }\r\n\r\n    getUserData = async()=>{\r\n        let messages = localStorage.getItem('messages');\r\n        if(messages){\r\n            messages = JSON.parse(messages);\r\n            await this.setState({messages});\r\n            messages.map(message => this.addMessageToContainer(message));\r\n        }\r\n    }\r\n\r\n    addMessageToContainer = (message)=>{\r\n        message = message\r\n        let senderMessageEle = document.createElement('div');\r\n        senderMessageEle.innerText = message; \r\n        senderMessageEle.className = 'sender';\r\n        \r\n        const lastReceiverMessage = document.getElementsByClassName('receiver');\r\n        if(lastReceiverMessage.length > 0) {\r\n            senderMessageEle.style.marginTop = 10+lastReceiverMessage[lastReceiverMessage.length-1].offsetHeight+'px';\r\n        }\r\n        else{\r\n            senderMessageEle.style.marginTop = '10px';\r\n        }\r\n\r\n\r\n        let senderMsgContainer = document.getElementById('senderContainer');\r\n        senderMsgContainer.appendChild(senderMessageEle);\r\n\r\n        let receiverMessageEle = document.createElement('div');\r\n        receiverMessageEle.innerText = message; \r\n        receiverMessageEle.className = 'receiver';\r\n        receiverMessageEle.style.marginTop = 10+senderMessageEle.offsetHeight+'px';\r\n\r\n        let receiverMsgContainer =  document.getElementById('receiverContainer');\r\n        receiverMsgContainer.appendChild(receiverMessageEle);\r\n\r\n        const msgContainer = document.getElementById('msgContainer');\r\n        msgContainer.scrollTop = msgContainer.scrollHeight;\r\n    }\r\n\r\n    sendMessage = async (event) => {\r\n        if(event.key === 'Enter') {\r\n            const message = event.target.value;\r\n            if(message!==''){\r\n                event.target.value = '';\r\n                let messages  = [...this.state.messages];\r\n                messages.push(message)\r\n                await this.setState({messages:messages});\r\n                localStorage.setItem('messages',JSON.stringify(messages));\r\n                this.addMessageToContainer(message);        \r\n            }\r\n        }\r\n    }\r\n\r\n    render(){            \r\n        return(\r\n            <div className='chatWindow'>\r\n                <Header/>\r\n                <div id=\"msgContainer\">\r\n                    <div id='receiverContainer'></div>\r\n                    <div id='senderContainer'></div>\r\n                </div>\r\n                <section className='inputBox'>\r\n                    <input type=\"text\" onKeyDown={this.sendMessage} placeholder=' Type a new message...'/>\r\n                </section>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\n\r\nexport default Home","import React from 'react'\r\nimport Chat from '../Components/Chat/Chat'\r\n\r\nconst App=()=> \r\n{\r\n    return (\r\n      <div>\r\n          <Chat/>\r\n      </div>\r\n    );  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Layout from './Container/Layout.js'\r\n\r\nconst App=()=> \r\n{\r\n    return (\r\n      <div>\r\n        <Layout/>\r\n      </div>\r\n    );  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nconst app=\r\n(\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(app,document.getElementById('root'))\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}